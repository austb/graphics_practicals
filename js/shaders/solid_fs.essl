shaderSource[document.currentScript.src.split('js/shaders/')[1]] = `
  precision highp float;

  uniform sampler2D colorTexture;
  uniform mat4 textureProjMatrix;
  uniform float uAlpha;
  uniform vec3 uAmbientLight;

  // Light
  uniform vec4 lightPos[10]; // xyz is the direction, w is 0
  uniform vec4 lightPowerDensity[10]; // w ignored

  varying vec2 texCoord;
  varying vec3 worldPos;
  varying vec3 worldNormal;

  void main(void) {

    vec3 reflectedColor;
    for(int i = 0; i < 10; i++) {
      vec3 specialDistance = lightPos[i].xyz - (worldPos * lightPos[i].w);
      highp float powerMagnitude = 1.0 / dot(specialDistance, specialDistance);

      vec3 powerMag = lightPowerDensity[i].xyz * powerMagnitude;

      highp float directionalComponent = max(dot(normalize(specialDistance), worldNormal), 0.0);

      vec3 powerMagWithDirection = powerMag * directionalComponent;

      reflectedColor += powerMagWithDirection;
    }

    vec4 scaledTexture = vec4(texCoord, 0.0, 1.0) * textureProjMatrix;
    vec4 textureColor = texture2D(colorTexture, vec2(scaledTexture.x, scaledTexture.y));
    gl_FragColor = vec4(textureColor.rgb * (uAmbientLight + reflectedColor), textureColor.a * uAlpha);
  }
`;
